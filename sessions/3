let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
inoremap <silent> <S-Tab> =BackwardsSnippet()
imap <C-S-Space> <Plug>SuperTabBackward
imap <C-Space> <Plug>SuperTabForward
inoremap <C-Tab> 	
snoremap <silent> 	 i<Right>=TriggerSnippet()
snoremap  b<BS>
snoremap % b<BS>%
snoremap ' b<BS>'
xmap S <Plug>VSurround
snoremap U b<BS>U
vmap [% [%m'gv``
snoremap \ b<BS>\
nmap <silent> \ups :call Perl_RemoveGuiMenus()
nmap <silent> \lps :call Perl_CreateGuiMenus()
nmap <silent> \ucs :call C_RemoveGuiMenus()
nmap <silent> \lcs :call C_CreateGuiMenus()
nmap \ca <Plug>NERDCommenterAltDelims
xmap \cu <Plug>NERDCommenterUncomment
nmap \cu <Plug>NERDCommenterUncomment
xmap \cb <Plug>NERDCommenterAlignBoth
nmap \cb <Plug>NERDCommenterAlignBoth
xmap \cl <Plug>NERDCommenterAlignLeft
nmap \cl <Plug>NERDCommenterAlignLeft
nmap \cA <Plug>NERDCommenterAppend
xmap \cy <Plug>NERDCommenterYank
nmap \cy <Plug>NERDCommenterYank
xmap \cs <Plug>NERDCommenterSexy
nmap \cs <Plug>NERDCommenterSexy
xmap \ci <Plug>NERDCommenterInvert
nmap \ci <Plug>NERDCommenterInvert
nmap \c$ <Plug>NERDCommenterToEOL
xmap \cn <Plug>NERDCommenterNested
nmap \cn <Plug>NERDCommenterNested
xmap \cm <Plug>NERDCommenterMinimal
nmap \cm <Plug>NERDCommenterMinimal
xmap \c  <Plug>NERDCommenterToggle
nmap \c  <Plug>NERDCommenterToggle
xmap \cc <Plug>NERDCommenterComment
nmap \cc <Plug>NERDCommenterComment
nmap <silent> \ubs :call BASH_RemoveGuiMenus()
nmap <silent> \lbs :call BASH_CreateGuiMenus()
vmap \be :BufExplorer
omap \be :BufExplorer
map \g :GundoToggle
nmap \a :Ack!
nnoremap <silent> \sw "_yiw:s/\(\%#\w\+\)\(\W\+\)\(\w\+\)/\3\2\1/
nnoremap \mh :call InsertCmd( 'hostname' )<Right>
nnoremap \my iMike Dacre (Salk @:call InsertCmd( 'hostname' )<Right>) =strftime("%d-%m-%y %H:%M:%S") 
nnoremap \me iMike Dacre 
nnoremap \dl "=strftime("%a %d %b %Y %X %Z")P
nnoremap \dt "=strftime("%T")P
nnoremap \ds "=strftime("%m/%d/%y")P
nnoremap \dd "=strftime("%d-%m-%y %H:%M:%S")P
vmap \ds :s/^\s\+
omap \ds :s/^\s\+
map \l "*
map \lp "*p
map \ll "*y$
map \PP :set nopaste:set expandtab
map \pp :set paste:set noexpandtab
map \tl <Plug>TaskList
map \tm :tabmove
map \tc :tabclose
map \te :tabedit
map \tn :tabnew
vmap ]f :call PythonDec("function", 1)
nmap ]f :call PythonDec("function", 1)
omap ]f :call PythonDec("function", 1)
vmap ]F :call PythonDec("function", -1)
nmap ]F :call PythonDec("function", -1)
omap ]F :call PythonDec("function", -1)
vmap ]j :call PythonDec("class", 1)
nmap ]j :call PythonDec("class", 1)
omap ]j :call PythonDec("class", 1)
vmap ]J :call PythonDec("class", -1)
nmap ]J :call PythonDec("class", -1)
omap ]J :call PythonDec("class", -1)
map ]<Down> :call PythonNextLine(1)
map ]<Up> :call PythonNextLine(-1)
map ]d :call PythonSelectObject("function")
map ]c :call PythonSelectObject("class")
vmap ]u :call PythonUncommentSelection()
nmap ]u :call PythonUncommentSelection()
omap ]u :call PythonUncommentSelection()
vmap ]# :call PythonCommentSelection()
nmap ]# :call PythonCommentSelection()
omap ]# :call PythonCommentSelection()
vmap ]> >
nmap ]> ]tV]e>
omap ]> ]tV]e>
vmap ]< <
nmap ]< ]tV]e<
omap ]< ]tV]e<
map ]v ]tV]e
vmap ]e :PEoBm'gv``
nmap ]e :PEoB
omap ]e :PEoB
vmap ]t :PBOBm'gv``
nmap ]t :PBoB
omap ]t :PBoB
vmap ]% ]%m'gv``
snoremap ^ b<BS>^
snoremap ` b<BS>`
vmap a% [%v]%
nmap cs <Plug>Csurround
nmap ds <Plug>Dsurround
nmap gx <Plug>NetrwBrowseX
xmap gS <Plug>VgSurround
xnoremap <silent> s :echoerr 'surround.vim: Visual mode s has been removed in favor of S'
nmap ySS <Plug>YSsurround
nmap ySs <Plug>YSsurround
nmap yss <Plug>Yssurround
nmap yS <Plug>YSurround
nmap ys <Plug>Ysurround
snoremap <Left> bi
snoremap <Right> a
snoremap <BS> b<BS>
snoremap <silent> <S-Tab> i<Right>=BackwardsSnippet()
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
nnoremap <silent> <F11> :call conque_term#exec_file()
xnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("x", "Uncomment")
nnoremap <silent> <Plug>NERDCommenterUncomment :call NERDComment("n", "Uncomment")
xnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("x", "AlignBoth")
nnoremap <silent> <Plug>NERDCommenterAlignBoth :call NERDComment("n", "AlignBoth")
xnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("x", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAlignLeft :call NERDComment("n", "AlignLeft")
nnoremap <silent> <Plug>NERDCommenterAppend :call NERDComment("n", "Append")
xnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("x", "Yank")
nnoremap <silent> <Plug>NERDCommenterYank :call NERDComment("n", "Yank")
xnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("x", "Sexy")
nnoremap <silent> <Plug>NERDCommenterSexy :call NERDComment("n", "Sexy")
xnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("x", "Invert")
nnoremap <silent> <Plug>NERDCommenterInvert :call NERDComment("n", "Invert")
nnoremap <silent> <Plug>NERDCommenterToEOL :call NERDComment("n", "ToEOL")
xnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("x", "Nested")
nnoremap <silent> <Plug>NERDCommenterNested :call NERDComment("n", "Nested")
xnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("x", "Minimal")
nnoremap <silent> <Plug>NERDCommenterMinimal :call NERDComment("n", "Minimal")
xnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("x", "Toggle")
nnoremap <silent> <Plug>NERDCommenterToggle :call NERDComment("n", "Toggle")
xnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("x", "Comment")
nnoremap <silent> <Plug>NERDCommenterComment :call NERDComment("n", "Comment")
nnoremap <S-Right> <Right>
nnoremap <S-Left> <Left>
nnoremap <S-Down> <Down>
nnoremap <S-Up> <Up>
noremap <F6> :NERDTree
noremap <F5> :TlistToggle
imap  
imap S <Plug>ISurround
imap s <Plug>Isurround
inoremap <silent> 	 =TriggerSnippet()
imap  <Plug>SuperTabForward
imap  <Plug>SuperTabBackward
inoremap <silent> 	 =ShowAvailableSnips()
imap  <Plug>Isurround
inoremap \mh :call InsertCmd( 'hostname' )<Right> 
inoremap \my Mike Dacre (Salk @:call InsertCmd( 'hostname' )<Right>) =strftime("%d-%m-%y %H:%M:%S") 
inoremap \me Mike Dacre 
inoremap \dl =strftime("%c")
inoremap \dt =strftime("%T")
inoremap \ds =strftime("%m/%d/%y")
inoremap \dd =strftime("%d-%m-%y %H:%M:%S")
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set backspace=indent,eol,start
set backupdir=~/.temp/backup
set cindent
set completeopt=menuone,longest,preview
set diffopt=filler,context:9999
set directory=~/.temp/swap
set expandtab
set fileencodings=ucs-bom,utf-8,default,latin1
set guicursor=
set guioptions=aegimt
set helplang=en
set history=50000
set hlsearch
set incsearch
set laststatus=2
set lazyredraw
set listchars=tab:^^
set makeef=error.err
set matchtime=2
set mouse=a
set nrformats=
set omnifunc=syntaxcomplete#Complete
set pastetoggle=<F10>
set ruler
set runtimepath=~/.vim,~/.vim/bundle/ack,~/.vim/bundle/bashsupport,~/.vim/bundle/bufexplorer,~/.vim/bundle/commenter,~/.vim/bundle/conque,~/.vim/bundle/csupport,~/.vim/bundle/fugitive,~/.vim/bundle/gundo,~/.vim/bundle/matchit,~/.vim/bundle/nerdtree,~/.vim/bundle/pep8,~/.vim/bundle/perlsupport,~/.vim/bundle/pythonmenu,~/.vim/bundle/pythonsyntax,~/.vim/bundle/rplugin,~/.vim/bundle/screen,~/.vim/bundle/sessionman,~/.vim/bundle/snipmate,~/.vim/bundle/superbtab,~/.vim/bundle/surround,~/.vim/bundle/taglist,~/.vim/bundle/tasklist,~/.vim/bundle/vim-git,/usr/local/share/vim/vimfiles,/usr/local/share/vim/vim73,/usr/local/share/vim/vimfiles/after,~/.vim/bundle/snipmate/after,~/.vim/after
set scrolloff=8
set selectmode=key
set sessionoptions=blank,buffers,curdir,folds,globals,help,localoptions,options,resize,tabpages,winsize,winpos
set shellredir=>%s\ 2>&1
set shiftround
set shiftwidth=2
set showcmd
set showfulltag
set showmatch
set smartcase
set smartindent
set statusline=%<%F\ %h%m%r%h%w%y\ %{fugitive#statusline()}%=\ col:%c%V\ %P
set tabstop=2
set tags=./tags,tags,./tags,./../tags,./**/tags,tags,.vim/tags
set undodir=~/.temp/undo
set undofile
set undoreload=50000
set updatetime=1000
set viminfo='10,\"100,:20,%,n~/.viminfo
set virtualedit=all
set wildmenu
set wildmode=list:longest,full
set window=48
set nowritebackup
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
let NERDTreeMapPreviewSplit = "gi"
let BASH_Version = "3.9"
let C_Dictionary_File = "/home/mike/.vim/bundle/csupport/c-support/wordlists/c-c++-keywords.list,/home/mike/.vim/bundle/csupport/c-support/wordlists/k+r.list,/home/mike/.vim/bundle/csupport/c-support/wordlists/stl_index.list"
let NERDTreeMapCloseChildren = "X"
let Tlist_Sort_Type = "order"
let Tlist_Process_file_Always =  1 
let NERDTreeShowHidden = "0"
let ScreenShellSession = "/tmp/vvpCK6B/2"
let SuperTabDefaultCompletionType = "context"
let Tlist_Enable_Fold_Column =  1 
let ConqueTerm_EscKey = "<Esc>"
let SuperTabLongestHighlight =  0 
let Perl_PerlRegexAnalyser = "no"
let NERDTreeMapCloseDir = "x"
let ConqueTerm_Color =  1 
let ScreenShellQuitOnVimExit =  1 
let ConqueTerm_Version =  230 
let Tlist_Show_One_File =  0 
let NERDTreeMinimalUI = "0"
let NERDUsePlaceHolders = "1"
let NERDTreeMapRefresh = "r"
let Tlist_Compact_Format =  0 
let Perl_MenuHeader = "yes"
let ScreenVersion = "1.5"
let ConqueTerm_SendFileKey = "<F10>"
let ConqueTerm_SendFunctionKeys =  0 
let ScreenShellExpandTabs =  0 
let NERDTreeBookmarksFile = "/home/mike/.NERDTreeBookmarks"
let Perl_Version = "4.14"
let NERDTreeMapToggleHidden = "I"
let NERDTreeWinSize = "31"
let NERDTreeSortDirs = "1"
let Tlist_Ctags_Cmd = "/usr/local/bin/ctags"
let Perl_CodeSnippets = "/home/mike/.vim/bundle/perlsupport//perl-support/codesnippets/"
let SuperTabCrClosePreview =  0 
let NERDRemoveExtraSpaces = "0"
let SuperTabCrMapping =  1 
let Tlist_Process_File_Always =  0 
let NERDTreeMapPreview = "go"
let Tlist_Use_SingleClick =  0 
let ConqueTerm_PyExe = ""
let ConqueTerm_ColorMode = ""
let NERDTreeMapActivateNode = "o"
let NERDTreeWinPos = "left"
let NERDTreeMapMenu = "m"
let ScreenShellCmd = ""
let NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"
let Perl_Installation = "local"
let Tlist_Display_Tag_Scope =  1 
let NERDTreeMapOpenInTabSilent = "T"
let NERDTreeMapHelp = "?"
let ConqueTerm_FastMode =  0 
let NERDTreeMapJumpParent = "p"
let NERDTreeMapToggleFilters = "f"
let SuperTabMappingForward = "<c-space>"
let NERDTreeAutoCenter = "1"
let SuperTabContextDefaultCompletionType = "<c-p>"
let TagList_title = "__Tag_List__"
let ScreenShellExternal =  0 
let NERDTreeMapJumpPrevSibling = "<C-k>"
let Perl_PerlRegexSubstitution = "$~"
let ScreenImpl = "Tmux"
let NERDTreeShowBookmarks = "0"
let NERDMenuMode = "3"
let BASH_Dictionary_File = "/home/mike/.vim/bundle/bashsupport/bash-support/wordlists/bash.list"
let NERDDefaultNesting = "1"
let NERDTreeMapOpenInTab = "t"
let NERDTreeRemoveDirCmd = "rm -rf "
let ScreenShellSendSuffix = ""
let NERDTreeChDirMode = "0"
let ConqueTerm_ExecFileKey = "<F11>"
let ConqueTerm_InsertCharPre =  0 
let Tlist_Highlight_Tag_On_BufEnter =  1 
let SuperTabMappingTabLiteral = "<c-tab>"
let ConqueTerm_CodePage =  0 
let NERDTreeAutoCenterThreshold = "3"
let NERDTreeShowFiles = "1"
let NERDTreeMapOpenSplit = "i"
let ConqueTerm_StartMessages =  1 
let ConqueTerm_ReadUnfocused =  0 
let NERDTreeCaseSensitiveSort = "0"
let ScreenShellTerminal = ""
let ConqueTerm_PyVersion =  2 
let NERDTreeHijackNetrw = "1"
let Tlist_Max_Submenu_Items =  20 
let Tlist_Auto_Update =  1 
let NERDSpaceDelims = "0"
let NERDTreeShowLineNumbers = "0"
let ScreenShellInitialFocus = "vim"
let NERDTreeHighlightCursorline = "1"
let ScreenShellTmuxInitArgs = ""
let Tlist_GainFocus_On_ToggleOpen =  1 
let NERDLPlace = "[>"
let NERDTreeMouseMode = "1"
let Perl_InterfaceInitialized = "no"
let Tlist_WinHeight =  10 
let ScreenShellSendPrefix = ""
let ConqueTerm_CloseOnEnd =  0 
let NERDCreateDefaultMappings = "1"
let Tlist_Inc_Winwidth =  1 
let ConqueTerm_InsertOnEnter =  0 
let NERDChristmasTree = "1"
let NERDTreeNotificationThreshold = "100"
let Tlist_Auto_Highlight_Tag =  1 
let NERDTreeMapJumpRoot = "P"
let NERDCommentWholeLinesInVMode = "0"
let Perl_Root = "&Perl."
let BufExplorer_title = "[Buf List]"
let NERDTreeMapChdir = "cd"
let ScreenShellScreenInitArgs = ""
let ScreenShellAttachTargetCurrent =  0 
let NERDRPlace = "<]"
let Tlist_Exit_OnlyWindow =  0 
let NERDTreeMapToggleZoom = "A"
let NERDTreeMapPreviewVSplit = "gs"
let Tlist_Display_Prototype =  0 
let NERDTreeMapRefreshRoot = "R"
let ScreenShellHeight =  15 
let Perl_Dictionary_File = "/home/mike/.vim/bundle/perlsupport//perl-support/wordlists/perl.list"
let Perl_PerlTags = "off"
let Tlist_Max_Tag_Length =  10 
let NERDRemoveAltComs = "1"
let NERDTreeMapJumpLastChild = "J"
let ConqueTerm_ToggleKey = "<F8>"
let NERDTreeMapOpenVSplit = "s"
let SuperTabLongestEnhanced =  0 
let Tlist_WinWidth =  30 
let Perl_OutputGvim = "vim"
let NERDTreeMapDeleteBookmark = "D"
let NERDBlockComIgnoreEmpty = "0"
let Tlist_Close_On_Select =  0 
let ScreenShellGnuScreenVerticalSupport = ""
let NERDTreeMapJumpNextSibling = "<C-j>"
let Tlist_File_Fold_Auto_Close =  0 
let Tlist_Auto_Open =  0 
let Tlist_Use_Horiz_Window =  0 
let ScreenShellActive =  0 
let NERDTreeCopyCmd = "cp -r "
let ConqueTerm_SendVisKey = "<F9>"
let SuperTabRetainCompletionDuration = "insert"
let NERDTreeMapQuit = "q"
let ScreenShellWidth =  -1 
let NERDTreeMapChangeRoot = "C"
let ConqueTerm_SessionSupport =  0 
let NERDCompactSexyComs = "0"
let LargeFile =  100 
let ConqueTerm_TERM = "vt100"
let NERDTreeMapToggleFiles = "F"
let NERDAllowAnyVisualDelims = "1"
let ConqueTerm_CWInsert =  0 
let NERDTreeDirArrows = "1"
let ConqueTerm_Idx =  0 
let ConqueTerm_PromptRegex = "^\\w\\+@[0-9A-Za-z_.-]\\+:[0-9A-Za-z_./\\~,:-]\\+\\$"
let NERDTreeMapOpenExpl = "e"
let NERDTreeMapJumpFirstChild = "K"
let NERDTreeMapOpenRecursively = "O"
let NERDTreeMapToggleBookmarks = "B"
let SuperTabMappingBackward = "<s-c-space>"
let ConqueTerm_Loaded =  1 
let C_Version = "5.17"
let NERDTreeMapUpdir = "u"
let ConqueTerm_Syntax = "conque_term"
let NERDTreeMapUpdirKeepOpen = "U"
let NERDTreeQuitOnOpen = "0"
let Tlist_Show_Menu =  0 
let Tlist_Use_Right_Window =  1 
silent only
cd /science/mike/Mito
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +23 move-data.sh
badd +71 data/dbSNP_Illumina/120215204222
badd +10 ~/Dropbox/Code/Projects/Mito/Mito.R
silent! argdel *
set lines=49 columns=140
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
enew
file NERD_tree_3
setlocal autoindent
setlocal balloonexpr=
setlocal nobinary
setlocal bufhidden=hide
setlocal nobuflisted
setlocal buftype=nofile
setlocal cindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=s1:/*,mb:*,ex:*/,://,b:#,:%,:XCOMM,n:>,fb:-
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
set cursorline
setlocal cursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal expandtab
if &filetype != 'nerdtree'
setlocal filetype=nerdtree
endif
setlocal foldcolumn=0
setlocal nofoldenable
setlocal foldexpr=0
setlocal foldignore=#
set foldlevel=9999
setlocal foldlevel=9999
set foldmarker={,}
setlocal foldmarker={,}
set foldmethod=marker
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=tcq
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=2
setlocal imsearch=2
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,192-255
setlocal keywordprg=
setlocal nolinebreak
setlocal nolisp
set list
setlocal list
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal modeline
setlocal nomodifiable
setlocal nrformats=
set number
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=syntaxcomplete#Complete
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal noscrollbind
setlocal shiftwidth=2
setlocal noshortname
setlocal smartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}
setlocal suffixesadd=
setlocal noswapfile
setlocal synmaxcol=3000
if &syntax != 'nerdtree'
setlocal syntax=nerdtree
endif
setlocal tabstop=2
setlocal tags=
setlocal textwidth=0
setlocal thesaurus=
setlocal undofile
setlocal nowinfixheight
setlocal winfixwidth
set nowrap
setlocal nowrap
setlocal wrapmargin=0
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
